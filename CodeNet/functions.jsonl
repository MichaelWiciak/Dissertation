{"code_string": "    for ( uint8_t i = 1 ; i < 10 ; i++ )\n              for ( uint8_t j = 1 ; j < 10 ; j++ )\n                   printf ( \"%ux%u=%u\\n\" , i , j , i * j );\n         return 0;"}
{"code_string": "    QQ () ;\n        return 0 ;"}
{"code_string": "    while (( s += ( e = e % 9 + 1 ) < 2 ) < 10 ) std::cout << s << 'x' << e << '=' << s * e << '\\n' ; 0 ;"}
{"code_string": "    int i , j ; F ( i ) F ( j ) printf ( \"%dx%d=%d\\n\" , i , j , i * j );"}
{"code_string": "    FOR ( i , 1 , 10 ) FOR ( j , 1 , 10 ) cout << i << \"x\" << j << \"=\" << i * j << endl ;"}
{"code_string": "    f ( i ) f ( j ) printf ( \"%dx%d=%d\\n\" , i , j , i * j );"}
{"code_string": "    f ( i , 9 ) f ( j , 9 ) printf ( \"%dx%d=%d\\n\" , i , j , i * j );\n        return 0;"}
{"code_string": "    outerLoop ( 1 );"}
{"code_string": "    for ( int i = 0 ; i < 81 ; i++ ) cout << i / 9 + 1 << 'x' << i % 9 + 1 << '=' << ( i / 9 + 1 ) * ( i % 9 + 1 ) << endl ;"}
{"code_string": "    for ( int i = 1 ; i < 10 ; i++ )\n            for ( int j = 1 ; j < 10 ; j++ )\n              printf ( \"%dx%d=%d\\n\" , i , j , i * j );\n        return 0;"}
{"code_string": "    print_qq ();"}
{"code_string": "    int i , n ;\n    for ( i = 1 ; i < 10 ; ++i ) for ( n = 1 ; n < 10 ; ++n ) printf ( \"%dx%d=%d\\n\" , i , n , i * n );"}
{"code_string": "    loop ( i , 1 , 10 )\n    \t\tloop ( j , 1 , 10 )\n    \t\t\tcout << i << \"x\" << j << \"=\" << i * j << endl ;"}
{"code_string": "    cin . tie ( 0 );\n        ios :: sync_with_stdio ( false );\n        for ( int i = 1 ; i < 10 ; i++ )\n            for ( int j = 1 ; j < 10 ; j++ )\n                cout << i << \"x\" << j << \"=\" << i * j << \"\\n\" ;"}
{"code_string": "    for ( int i = 0 ; i < 81 ; i++ ) printf ( \"%dx%d=%d\\n\" , i / 9 + 1 , i % 9 + 1 , ( i / 9 + 1 ) * ( i % 9 + 1 ));"}
{"code_string": "    solve ans ;\n        ans . qq ();\n        return 0 ;"}
{"code_string": "    solvey ( 1 );\n    \treturn 0 ;"}
{"code_string": "    // Start QQ\n        run ();"}
{"code_string": "    REP ( i , 9 )\n            REP ( j , 9 )\n                cout << i + 1 << 'x' << j + 1 << '=' << ( i + 1 ) * ( j + 1 ) << '\\n' ;"}
{"code_string": "    for ( int i = 1 ; i <= 9 ; i++ )\n        for ( int k = 1 ; k <= 9 ; k++ ) cout << i << \"x\" << k << \"=\" << i * k << endl ;"}
{"code_string": "    for ( int i = 1 ; i <= 9 ; ++i )\n        for ( int j = 1 ; j <= 9 ; ++j )\n          std :: cout << i << \"x\" << j << \"=\" << i * j << std :: endl ;\n      return 0 ;"}
{"code_string": "    for ( int i = 1 ; i < 10 ; ++i )\n            for ( int j = 1 ; j < 10 ; ++j )\n                cout << i << 'x' << j << '=' << i * j << endl ;"}
{"code_string": "    erep ( i , 1 , 9 ) erep ( j , 1 , 9 ) cout << i << \"x\" << j << \"=\" << i * j << endl ;\n\n      return 0 ;"}
{"code_string": "    for ( a = 1 ; a <= 9 ; a++ )\n        for ( b = 1 ; b <= 9 ; b++ )\n          printf ( \"%dx%d=%d\\n\" , a , b , a * b );\n      return 0 ;"}
{"code_string": "    for ( int a = 1 ; a <= 9 ; a++ )\n        for ( int b = 1 ; b <= 9 ; b++ )\n          printf ( \"%dx%d=%d\\n\" , a , b , a * b );\n      return 0 ;"}
{"code_string": "    for ( int s = 1 ; s < 10 ; s++ ) for ( int e = 1 ; e < 10 ; e++ ) std :: cout << s << 'x' << e << '=' << ( s * e ) << std :: endl ; return 0 ;"}
{"code_string": "    cin . tie ( 0 );\n    \tios :: sync_with_stdio ( false );\n\n\n    \tsolve ();\n    #ifdef _WIN32\n    \tsystem ( \"PAUSE\" );\n    #endif\n    \treturn 0 ;"}
{"code_string": "    for ( int i = 1 ; i <= 9 ; i++ )\n    \t\tfor ( int j = 1 ; j <= 9 ; j++ )\n    \t\t\tcout << i << \"x\" << j << \"=\" << i * j << endl ;"}
{"code_string": "    cin . tie ( 0 );\n        ios :: sync_with_stdio ( false );\n        for ( int i = 1 ; i <= 9 ; i++ )\n            for ( int j = 1 ; j <= 9 ; j++ )\n                cout << i << \"x\" << j << \"=\" << i * j << \"\\n\" ;"}
{"code_string": "    for ( int i = 1 ; i < 10 ; i++ )\n       for ( int j = 1 ; j < 10 ; j++ )\n         cout << i << 'x' << j << '=' << i * j << endl ;\n      return 0 ;"}
{"code_string": "    rep1 ( i , 9 ) rep1 ( j , 9 ) printf ( \"%dx%d=%d\\n\" , i , j , i * j );"}
{"code_string": "    hoge ();\n\t\n    \treturn 0 ;"}
{"code_string": "    loop ( x ) loop ( y ) printf ( \"%dx%d=%d\\n\" , x , y , x * y );"}
{"code_string": "    REP ( i , 9 ) REP ( j , 9 ) cout << i << \"x\" << j << \"=\" << i * j << endl ;"}
{"code_string": "    for ( int i = 1 ; i < 10 ; i++ )\n        for ( int j = 1 ; j < 10 ; j++ )\n          cout << i << \"x\" << j << \"=\" << i * j << endl ;"}
{"code_string": "    rrep ( i , 9 ) rrep ( j , 9 ) printf ( \"%dx%d=%d\\n\" , i , j , i * j );\n    \treturn 0 ;"}
{"code_string": "    int a [ 128 ];\n      int cnt = 0 ;\n      int max_depth = 25 ;\n      rec ( 0 , max_depth , a , cnt );\n  \n      for ( int a = 1 ; a <= 9 ; a++ )\n        for ( int b = 1 ; b <= 9 ; b++ )\n          printf ( \"%dx%d=%d\\n\" , a , b , a * b );\n      return 0 ;"}
{"code_string": "    for ( a = 1 ; a <= 9 ; a++ ) for ( b = 1 ; b <= 9 ; b++ ) printf ( \"%dx%d=%d\\n\" , a , b , a * b ); return 0 ;"}
{"code_string": "    REP ( i , 9 ) REP ( j , 9 ) cout << i + 1 << \"x\" << j + 1 << \"=\" << ( i + 1 ) * ( j + 1 ) << endl ;\n        solve ();"}
{"code_string": "    rep ( i , 1 , 10 )\n    \trep ( j , 1 , 10 )\n    \tcout << i << 'x' << j << '=' << i * j << endl ;\n    \treturn 0 ;"}
{"code_string": "    ios :: sync_with_stdio ( 0 );\n\n    \tfor ( int i = 1 ; i <= 9 ; ++i )\n    \t\tfor ( int j = 1 ; j <= 9 ; ++j )\n    \t\t\tcout << i << \"x\" << j << \"=\" << i * j << endl ;\n\n    \treturn 0 ;"}
{"code_string": "    QQ ( 1 , 1 );"}
{"code_string": "    for ( int i = 0 ; i < 9 ; i++ )\n            for ( int j = 0 ; j < 9 ; j++ )\n                printf ( \"%dx%d=%d\\n\" , i + 1 , j + 1 , ( i + 1 ) * ( j + 1 ));"}
{"code_string": "    REP ( i , 9 ) REP ( j , 9 ) cout << i + 1 << \"x\" << j + 1 << \"=\" << ( i + 1 ) * ( j + 1 ) << endl ;\n        return 0 ;"}
{"code_string": "    c_main main01 ;\n        main01 . f_input ();\n    \n        return 0 ;"}
{"code_string": "    for ( int i = 9 ; i < 90 ; i++ ) printf ( \"%dx%d=%d\\n\" , i / 9 , i % 9 + 1 , i / 9 * ( i % 9 + 1 ));"}
{"code_string": "    solve ();\n    \treturn ( 0 );"}
{"code_string": "    upto ( 1 , 9 , i ) upto ( 1 , 9 , j ) cout << i << 'x' << j << '=' << i * j << endl poi\n        return 0 poi"}
{"code_string": "    solver ();"}
{"code_string": "    for ( int i = 1 ; i <= 9 ; i++ )\n    \t\tfor ( int k = 1 ; k <= 9 ; k++ )\n    \t\t\tstd :: cout << i << 'x' << k << '=' << i * k << std :: endl ;\n    \treturn 0 ;"}
{"code_string": "    for ( int index = 1 ; index < 10 ; ++index )\n    \t\ttabuada ( index );\n\n    \treturn 0 ;"}
{"code_string": "    for ( int i = 1 ; i < 10 ; i++ )\n            for ( int j = 1 ; j < 10 ; j++ )\n                cout << i << \"x\" << j << \"=\" << i * j << endl ;\n\n        return 0 ;"}
{"code_string": "    for ( int i = 1 ; i <= 9 ; i++ )\n        for ( int j = 1 ; j <= 9 ; j++ )\n          cout << i << 'x' << j << '=' << i * j << endl ;"}
{"code_string": "    printQq ();\n\n    \treturn 0 ;"}
{"code_string": "    L ( i , 9 )\n    \t\tL ( j , 9 )\n    \t\t\tcout << i << \"x\" << j << \"=\" << i * j << endl ;\n    \treturn 0 ;"}
{"code_string": "    REP ( i , 9 ) REP ( j , 9 ) cout << i + 1 << \"x\" << j + 1 << \"=\" << ( i + 1 ) * ( j + 1 ) << endl ;\n    \treturn 0 ;"}
